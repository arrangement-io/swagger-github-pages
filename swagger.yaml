openapi: 3.0.0
info:
  title: API Documentation
  version: 1.0.0
servers:
  - url: http://api.example.com/v1
paths:
  /arrangement/{id}:
    get:
      summary: Retrieve Arrangement
      tags:
        - Arrangement
      parameters:
        - name: id
          in: path
          required: true
          description: Arrangement's unique ID.
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Arrangement'
    post:
      summary: Create Arrangement
      tags:
        - Arrangement
      parameters:
        - name: id
          in: path
          required: true
          description: Arrangement's unique ID.
          schema:
            type: number
        - name: ArrangementObject
          in: body
          required: true
          description: Arrangement Object.
          schema:
            $ref: '#/components/schemas/ArrangementObject'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Arrangement'
  /arrangement/{id}/export/{type}:
    get:
      summary: Export Arrangement
      tags:
        - Arrangement
      parameters:
        - name: id
          in: path
          required: true
          description: Arrangement's unique ID.
          schema:
            type: number
        - name: type
          in: path
          required: true
          description: Export type.
          schema:
            type: string
            enum:
              - tsv
              - csv
              - json
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: |
                "Snapshot 1","",""
                car,bling,unassigned
                driver,hejo,blah
                passenger,"",heyya
  /login:
    post:
      summary: LogIn User
      tags:
        - Session
      parameters:
        - name: access_token
          in: body
          required: true
          description: User access token.
          schema:
            type: string
        - name: user_data
          in: body
          required: true
          description: User Object.
          schema:
            $ref: '#/components/schemas/UserObject'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /logout:
    post:
      summary: LogOut User
      tags:
        - Session
      description: Not Yet Implemented.
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: |
                {
                  "message": "You are logged out."
                }
  /users/{id}:
    get:
      summary: Retrieve User
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          description: User's unique ID.
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{id}/arrangements:
    get:
      summary: Retrieve User's Arrangements
      tags:
        -
